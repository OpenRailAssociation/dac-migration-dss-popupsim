name : Python backend

on:
  pull_request:
    branches: [main]
    paths:
      - 'backend/**'
      - '.github/workflows/python-backend.yaml'
      - '.github/workflows/setup-python/**'
      - 'pyproject.toml'
      - 'uv.lock'
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - '.github/workflows/setup-python/**'
      - 'pyproject.toml'
      - 'uv.lock'

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python development environment
        uses: ./.github/setup-python/dev.yml
      - name: Format with ruff
        run: uv run ruff format --check --diff .

  lint:
    needs: format
    runs-on: ubuntu-latest
    strategy:
      matrix:
        linter:
          - ruff
          - pylint
          - mypy
    steps:
      - name: Setup Python development environment
        uses: ./.github/setup-python/dev.yml
      - name: Lint with ruff
        if: matrix.linter == 'ruff'
        run: uv run ruff check --output-format=github .
      - name: Lint with pylint
        if: matrix.linter == 'pylint'
        run: uv run pylint backend/src/ --output-format=colorized
      - name: Type check with mypy
        if: matrix.linter == 'mypy'
        run: uv run mypy backend/src/ --show-error-codes

  test:
    needs: format
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python development environment
        uses: ./.github/setup-python/dev.yml
      - name: Test with pytest
        run: uv run pytest --tb=short || true
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: hashFiles('coverage.xml') != ''
        with:
          file: ./coverage.xml
          fail_ci_if_error: false